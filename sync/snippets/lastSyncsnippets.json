{"ref":"66fd18ae-aec2-4fcd-8486-81bf40dc1173","content":"{\"version\":1,\"machineId\":\"2b4b2686-86de-4e51-ac21-29693160228d\",\"content\":\"{\\\"c.json\\\":\\\"{\\\\n\\\\t// Place your snippets for c here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n\\\\t\\\\\\\"Start C program\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"inc\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"//$1\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"#include <stdio.h>\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"#include <math.h>\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"#include <string.h>\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"#include <stdlib.h>\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"#include <time.h>\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"void main()\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"{\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\\t$2$2\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"}\\\\\\\",\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"C programing\\\\\\\"\\\\n\\\\t},\\\\n\\\\t\\\\\\\"printf\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"pr\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"printf(\\\\\\\\\\\\\\\"$1\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"$2);\\\\\\\",\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"C programing er print\\\\\\\"\\\\n\\\\t},\\\\n\\\\t\\\\\\\"scanf\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"sc\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"printf(\\\\\\\\\\\\\\\"${1:Enter }\\\\\\\\\\\\\\\");\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"scanf(\\\\\\\\\\\\\\\"%$2\\\\\\\\\\\\\\\", &$3);\\\\\\\",\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"C programing er scanf\\\\\\\"\\\\n\\\\t},\\\\n\\\\t\\\\\\\"gets\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"ge\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"printf(\\\\\\\\\\\\\\\"${1:Enter }\\\\\\\\\\\\\\\");\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"fflush(stdin);\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"gets($2);\\\\\\\",\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"String er input neyar jonno gets er fflush use kora hoyeche\\\\\\\"\\\\n\\\\t},\\\\n\\\\t\\\\\\\"#define\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"def\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"#define  ${1:name} ${2:code}\\\\\\\",\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"#define er snipet\\\\\\\"\\\\n\\\\t},\\\\n}\\\",\\\"html.json\\\":\\\"{\\\\n\\\\t// Place your snippets for html here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n}\\\",\\\"javascript.json\\\":\\\"{\\\\n\\\\t// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n}\\\",\\\"php.json\\\":\\\"{\\\\n\\\\t// Place your snippets for php here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n}\\\"}\"}"}